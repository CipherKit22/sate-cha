{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Downloads\\\\test1\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authService } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing session\n    const initializeAuth = async () => {\n      try {\n        const currentUser = await authService.getCurrentUser();\n        setUser(currentUser);\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = authService.onAuthStateChange(user => {\n      setUser(user);\n      setLoading(false);\n    });\n    return () => {\n      subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\n    };\n  }, []);\n  const signIn = async (email, password) => {\n    setLoading(true);\n    try {\n      const result = await authService.signIn({\n        email,\n        password\n      });\n      if (result.user) {\n        setUser(result.user);\n        return {};\n      }\n      return {\n        error: result.error || 'Sign in failed'\n      };\n    } catch (error) {\n      return {\n        error: 'An unexpected error occurred'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signUp = async data => {\n    setLoading(true);\n    try {\n      const result = await authService.signUp(data);\n      if (result.user) {\n        setUser(result.user);\n        return {};\n      }\n      return {\n        error: result.error || 'Sign up failed'\n      };\n    } catch (error) {\n      return {\n        error: 'An unexpected error occurred'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signOut = async () => {\n    setLoading(true);\n    try {\n      await authService.signOut();\n      setUser(null);\n    } catch (error) {\n      console.error('Sign out error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProfile = async updates => {\n    if (!user) return {\n      error: 'No user logged in'\n    };\n    try {\n      const result = await authService.updateProfile(user.id, updates);\n      if (!result.error) {\n        // Refresh user data\n        const updatedUser = await authService.getCurrentUser();\n        setUser(updatedUser);\n      }\n      return result;\n    } catch (error) {\n      return {\n        error: 'Failed to update profile'\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authService","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initializeAuth","currentUser","getCurrentUser","error","console","data","subscription","onAuthStateChange","unsubscribe","signIn","email","password","result","signUp","signOut","updateProfile","updates","id","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Downloads/test1/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { authService, User } from '../services/auth';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<{ error?: string }>;\n  signUp: (data: {\n    email: string;\n    password: string;\n    username: string;\n    fullName: string;\n    languagePreference: 'en' | 'my';\n  }) => Promise<{ error?: string }>;\n  signOut: () => Promise<void>;\n  updateProfile: (updates: any) => Promise<{ error?: string }>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing session\n    const initializeAuth = async () => {\n      try {\n        const currentUser = await authService.getCurrentUser();\n        setUser(currentUser);\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n\n    // Listen for auth changes\n    const { data: { subscription } } = authService.onAuthStateChange((user) => {\n      setUser(user);\n      setLoading(false);\n    });\n\n    return () => {\n      subscription?.unsubscribe();\n    };\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    setLoading(true);\n    try {\n      const result = await authService.signIn({ email, password });\n      if (result.user) {\n        setUser(result.user);\n        return {};\n      }\n      return { error: result.error || 'Sign in failed' };\n    } catch (error) {\n      return { error: 'An unexpected error occurred' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signUp = async (data: {\n    email: string;\n    password: string;\n    username: string;\n    fullName: string;\n    languagePreference: 'en' | 'my';\n  }) => {\n    setLoading(true);\n    try {\n      const result = await authService.signUp(data);\n      if (result.user) {\n        setUser(result.user);\n        return {};\n      }\n      return { error: result.error || 'Sign up failed' };\n    } catch (error) {\n      return { error: 'An unexpected error occurred' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signOut = async () => {\n    setLoading(true);\n    try {\n      await authService.signOut();\n      setUser(null);\n    } catch (error) {\n      console.error('Sign out error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateProfile = async (updates: any) => {\n    if (!user) return { error: 'No user logged in' };\n    \n    try {\n      const result = await authService.updateProfile(user.id, updates);\n      if (!result.error) {\n        // Refresh user data\n        const updatedUser = await authService.getCurrentUser();\n        setUser(updatedUser);\n      }\n      return result;\n    } catch (error) {\n      return { error: 'Failed to update profile' };\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    updateProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}