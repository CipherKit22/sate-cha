{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const chatService = {\n  sendMessage: async message => {\n    try {\n      const response = await api.post('/chat', {\n        message\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error sending message:', error);\n      throw error;\n    }\n  },\n  getKnowledgeBase: async () => {\n    try {\n      const response = await api.get('/knowledge');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching knowledge base:', error);\n      throw error;\n    }\n  },\n  addKnowledge: async (title, content) => {\n    try {\n      const response = await api.post('/knowledge', {\n        title,\n        content\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding knowledge:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","chatService","sendMessage","message","response","post","data","error","console","getKnowledgeBase","get","addKnowledge","title","content"],"sources":["C:/Users/Acer/Downloads/test1/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { ChatResponse, KnowledgeBase } from '../types';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const chatService = {\n  sendMessage: async (message: string): Promise<ChatResponse> => {\n    try {\n      const response = await api.post('/chat', { message });\n      return response.data;\n    } catch (error) {\n      console.error('Error sending message:', error);\n      throw error;\n    }\n  },\n\n  getKnowledgeBase: async (): Promise<KnowledgeBase[]> => {\n    try {\n      const response = await api.get('/knowledge');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching knowledge base:', error);\n      throw error;\n    }\n  },\n\n  addKnowledge: async (title: string, content: string): Promise<KnowledgeBase> => {\n    try {\n      const response = await api.post('/knowledge', { title, content });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding knowledge:', error);\n      throw error;\n    }\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG;EACzBC,WAAW,EAAE,MAAOC,OAAe,IAA4B;IAC7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,OAAO,EAAE;QAAEF;MAAQ,CAAC,CAAC;MACrD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,gBAAgB,EAAE,MAAAA,CAAA,KAAsC;IACtD,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMP,GAAG,CAACa,GAAG,CAAC,YAAY,CAAC;MAC5C,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDI,YAAY,EAAE,MAAAA,CAAOC,KAAa,EAAEC,OAAe,KAA6B;IAC9E,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,YAAY,EAAE;QAAEO,KAAK;QAAEC;MAAQ,CAAC,CAAC;MACjE,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}